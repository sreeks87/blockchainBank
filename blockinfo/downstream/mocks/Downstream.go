// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/NuriCareers/Sreekanth-Cheriyanath-coding-challenge/blockinfo/domain"
	mock "github.com/stretchr/testify/mock"
)

// Downstream is an autogenerated mock type for the Downstream type
type Downstream struct {
	mock.Mock
}

// GetBlock provides a mock function with given fields: _a0, _a1
func (_m *Downstream) GetBlock(_a0 string, _a1 string) (*domain.Block, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *domain.Block
	if rf, ok := ret.Get(0).(func(string, string) *domain.Block); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Block)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTransaction provides a mock function with given fields: _a0, _a1
func (_m *Downstream) GetTransaction(_a0 string, _a1 string) (*domain.Transaction, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *domain.Transaction
	if rf, ok := ret.Get(0).(func(string, string) *domain.Transaction); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
